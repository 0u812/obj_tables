# a migrations configuration
# round-trip migrations, which transform an obj_model model file to itself
simple_migration:
    schema_files: [small_existing.py, small_existing.py]
    existing_files: [example_existing_model.xlsx]

migration_with_renaming:
    schema_files: [small_existing_rt.py, small_migrated_rt.py, small_existing_rt.py]
    seq_of_renamed_models: [[[Test, MigratedTest]], [[MigratedTest, Test]]]
    seq_of_renamed_attributes: [
        # for 1st migration:
        [[[Test, existing_attr], [MigratedTest, migrated_attr]],
        [[Property, value], [Property, migrated_value]],
        [[Subtest, references], [Subtest, migrated_references]]],

        # for 2nd migration:
        [[[MigratedTest, migrated_attr], [Test, existing_attr]],
        [[Property, migrated_value], [Property, value]],
        [[Subtest, migrated_references], [Subtest, references]]]
    ]
    existing_files: [example_existing_model_rt.xlsx]

wc_lang_migration:
    # use fully_instantiated_wc_lang_model.xlsx so round-trip test makes identical existing and migrated files
    existing_files: [fully_instantiated_wc_lang_model.xlsx]
    schema_files: [wc_lang_fixture/wc_lang/core.py, wc_lang_fixture/wc_lang/core_modified.py, wc_lang_fixture/wc_lang/core.py]
    seq_of_renamed_models: [
        # for 1st migration:
        [[Parameter, ParameterRenamed]],

        # for 2nd migration:
        [[ParameterRenamed, Parameter]]
    ]
    